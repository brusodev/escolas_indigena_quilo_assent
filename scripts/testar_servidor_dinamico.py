#!/usr/bin/env python3
"""
Validar se os dados din√¢micos est√£o funcionando no servidor
"""

import requests
import json
import time


def testar_servidor_dinamico(porta=8002):
    """Testa se o servidor est√° carregando dados din√¢micos"""
    base_url = f"http://localhost:{porta}"

    print("üß™ TESTANDO SERVIDOR COM DADOS DIN√ÇMICOS")
    print("=" * 50)

    try:
        # 1. Testar se o servidor est√° rodando
        print("1Ô∏è‚É£ Testando conectividade...")
        response = requests.get(
            f"{base_url}/dashboard_integrado.html", timeout=5)

        if response.status_code == 200:
            print("   ‚úÖ Servidor respondendo")
        else:
            print(f"   ‚ùå Servidor retornou status {response.status_code}")
            return False

        # 2. Testar se o JSON de escolas est√° acess√≠vel
        print("2Ô∏è‚É£ Testando JSON de escolas...")
        response = requests.get(
            f"{base_url}/dados/json/dados_escolas_atualizados.json", timeout=5)

        if response.status_code == 200:
            dados_escolas = response.json()
            print(f"   ‚úÖ JSON acess√≠vel: {len(dados_escolas)} escolas")

            # Verificar tipos
            indigenas = len(
                [e for e in dados_escolas if e.get('type') == 'indigena'])
            quilombolas = len(
                [e for e in dados_escolas if e.get('type') == 'quilombola'])
            print(
                f"   üìä Tipos: {indigenas} ind√≠genas + {quilombolas} quilombolas")

        else:
            print(f"   ‚ùå JSON n√£o acess√≠vel: status {response.status_code}")
            return False

        # 3. Testar se o JSON de ve√≠culos est√° acess√≠vel
        print("3Ô∏è‚É£ Testando JSON de ve√≠culos...")
        response = requests.get(
            f"{base_url}/dados_veiculos_diretorias.json", timeout=5)

        if response.status_code == 200:
            dados_veiculos = response.json()
            total_veiculos = dados_veiculos['metadata']['total_veiculos']
            print(f"   ‚úÖ JSON acess√≠vel: {total_veiculos} ve√≠culos totais")
        else:
            print(
                f"   ‚ùå JSON de ve√≠culos n√£o acess√≠vel: status {response.status_code}")
            return False

        # 4. Testar JavaScript din√¢mico
        print("4Ô∏è‚É£ Testando JavaScript din√¢mico...")
        response = requests.get(
            f"{base_url}/static/js/dash_dinamico.js", timeout=5)

        if response.status_code == 200:
            js_content = response.text
            if "loadSchoolsData" in js_content and "fetch" in js_content:
                print("   ‚úÖ JavaScript din√¢mico acess√≠vel")
                print("   ‚úÖ Cont√©m fun√ß√µes de carregamento din√¢mico")
            else:
                print("   ‚ùå JavaScript n√£o cont√©m fun√ß√µes din√¢micas")
                return False
        else:
            print(
                f"   ‚ùå JavaScript n√£o acess√≠vel: status {response.status_code}")
            return False

        print("\nüéâ TODOS OS TESTES PASSARAM!")
        print(
            f"‚úÖ Dashboard din√¢mico funcionando em: {base_url}/dashboard_integrado.html")
        print("‚úÖ Dados sendo carregados diretamente dos JSONs")
        print("‚úÖ Quando acessado via servidor, mostrar√° dados atualizados")

        return True

    except requests.exceptions.ConnectionError:
        print(f"‚ùå N√£o foi poss√≠vel conectar ao servidor na porta {porta}")
        print("üí° Certifique-se de que o servidor est√° rodando:")
        print(f"   python -m http.server {porta}")
        return False

    except Exception as e:
        print(f"‚ùå Erro durante o teste: {e}")
        return False


def comparar_dados_estaticos_vs_dinamicos():
    """Compara os dados que seriam carregados estaticamente vs dinamicamente"""
    print("\nüìä COMPARA√á√ÉO: EST√ÅTICO vs DIN√ÇMICO")
    print("=" * 40)

    # Dados do JSON (din√¢mico)
    with open('dados/json/dados_escolas_atualizados.json', 'r', encoding='utf-8') as f:
        dados_json = json.load(f)

    indigenas_json = len(
        [e for e in dados_json if e.get('type') == 'indigena'])
    quilombolas_json = len(
        [e for e in dados_json if e.get('type') == 'quilombola'])

    print("üìÑ DADOS DIN√ÇMICOS (JSON):")
    print(f"   ‚Ä¢ Total: {len(dados_json)} escolas")
    print(f"   ‚Ä¢ Ind√≠genas: {indigenas_json}")
    print(f"   ‚Ä¢ Quilombolas: {quilombolas_json}")

    # Verificar se h√° discrep√¢ncia no HTML est√°tico
    with open('dashboard_integrado.html', 'r', encoding='utf-8') as f:
        html_content = f.read()

    print("\nüìÑ DADOS EST√ÅTICOS (HTML):")
    if "37 Escolas Ind√≠genas + 26" in html_content:
        print("   ‚úÖ HTML tem n√∫meros corretos (37+26)")
    else:
        print("   ‚ùå HTML tem n√∫meros incorretos")

    if "39 ve√≠culos" in html_content:
        print("   ‚úÖ HTML menciona 39 ve√≠culos")
    else:
        print("   ‚ùå HTML n√£o menciona 39 ve√≠culos")

    print(f"\nüéØ RESULTADO:")
    if indigenas_json == 37 and quilombolas_json == 26:
        print("‚úÖ Dados din√¢micos est√£o corretos e atualizados")
    else:
        print("‚ùå Dados din√¢micos est√£o incorretos")


if __name__ == "__main__":
    # Aguardar um momento para o servidor estabilizar
    time.sleep(2)

    # Testar servidor din√¢mico
    sucesso = testar_servidor_dinamico(8002)

    # Comparar dados
    comparar_dados_estaticos_vs_dinamicos()

    if sucesso:
        print(f"\nüöÄ CORRE√á√ÉO COMPLETA!")
        print("   O dashboard agora carrega dados din√¢micos via servidor")
        print("   Os dados sempre estar√£o sincronizados com os JSONs")
    else:
        print(f"\n‚ö†Ô∏è Verificar problemas acima")
