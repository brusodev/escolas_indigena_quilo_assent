#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script de Inicializa√ß√£o do Banco de Dados
Sistema Flask + SQLAlchemy + PostgreSQL
"""

import os
import sys
from pathlib import Path

# Adicionar o diret√≥rio do projeto ao path
sys.path.insert(0, str(Path(__file__).parent))

from app import create_app, db
from app.models import Escola, Diretoria, Veiculo, Supervisor, Distancia
from app.utils.imports import import_all_data


def init_database():
    """Inicializa o banco de dados"""
    print("üóÑÔ∏è INICIALIZANDO BANCO DE DADOS...")
    print("=" * 50)
    
    # Criar aplica√ß√£o
    app = create_app()
    
    with app.app_context():
        print("üìä Criando tabelas...")
        
        # Dropar e recriar todas as tabelas (apenas para desenvolvimento)
        db.drop_all()
        db.create_all()
        
        print("‚úÖ Tabelas criadas com sucesso!")
        
        # Importar dados
        print("\nüì• Importando dados...")
        success = import_all_data()
        
        if success:
            # Verificar dados importados
            print("\nüìä RESUMO DOS DADOS IMPORTADOS:")
            print(f"   üè´ Escolas: {Escola.query.count()}")
            print(f"   üèõÔ∏è Diretorias: {Diretoria.query.count()}")
            print(f"   üöó Ve√≠culos: {Veiculo.query.count()}")
            print(f"   üë• Supervisores: {Supervisor.query.count()}")
            print(f"   üìè Dist√¢ncias: {Distancia.query.count()}")
            
            print("\nüéâ BANCO DE DADOS INICIALIZADO COM SUCESSO!")
            return True
        else:
            print("\n‚ùå ERRO NA IMPORTA√á√ÉO DOS DADOS")
            return False


def reset_database():
    """Reset completo do banco de dados"""
    print("üîÑ RESETANDO BANCO DE DADOS...")
    print("‚ö†Ô∏è ATEN√á√ÉO: Todos os dados ser√£o perdidos!")
    
    confirm = input("Digite 'CONFIRMAR' para continuar: ")
    if confirm != 'CONFIRMAR':
        print("‚ùå Opera√ß√£o cancelada")
        return False
    
    return init_database()


def check_database():
    """Verifica o status do banco de dados"""
    print("üîç VERIFICANDO BANCO DE DADOS...")
    print("=" * 50)
    
    app = create_app()
    
    with app.app_context():
        try:
            # Testar conex√£o
            db.session.execute('SELECT 1')
            print("‚úÖ Conex√£o com banco: OK")
            
            # Verificar tabelas
            tables = {
                'Escolas': Escola.query.count(),
                'Diretorias': Diretoria.query.count(),
                'Ve√≠culos': Veiculo.query.count(),
                'Supervisores': Supervisor.query.count(),
                'Dist√¢ncias': Distancia.query.count()
            }
            
            print("\nüìä DADOS EXISTENTES:")
            for table, count in tables.items():
                status = "‚úÖ" if count > 0 else "‚ö†Ô∏è"
                print(f"   {status} {table}: {count} registros")
            
            # Verificar integridade b√°sica
            print("\nüîç VERIFICA√á√ïES DE INTEGRIDADE:")
            
            # Escolas sem coordenadas
            escolas_sem_coords = Escola.query.filter(
                (Escola.latitude.is_(None)) | (Escola.longitude.is_(None))
            ).count()
            status = "‚úÖ" if escolas_sem_coords == 0 else "‚ö†Ô∏è"
            print(f"   {status} Escolas sem coordenadas: {escolas_sem_coords}")
            
            # Escolas sem diretoria
            escolas_sem_diretoria = Escola.query.filter(
                Escola.diretoria_id.is_(None)
            ).count()
            status = "‚úÖ" if escolas_sem_diretoria == 0 else "‚ö†Ô∏è"
            print(f"   {status} Escolas sem diretoria: {escolas_sem_diretoria}")
            
            # Diretorias sem coordenadas
            diretorias_sem_coords = Diretoria.query.filter(
                (Diretoria.latitude.is_(None)) | (Diretoria.longitude.is_(None))
            ).count()
            status = "‚úÖ" if diretorias_sem_coords == 0 else "‚ö†Ô∏è"
            print(f"   {status} Diretorias sem coordenadas: {diretorias_sem_coords}")
            
            print("\n‚úÖ VERIFICA√á√ÉO CONCLU√çDA")
            return True
            
        except Exception as e:
            print(f"‚ùå Erro na verifica√ß√£o: {e}")
            return False


def main():
    """Fun√ß√£o principal"""
    if len(sys.argv) < 2:
        print("üóÑÔ∏è GERENCIADOR DO BANCO DE DADOS")
        print("=" * 50)
        print("Uso: python init_db.py [comando]")
        print("\nComandos dispon√≠veis:")
        print("  init     - Inicializar banco de dados")
        print("  reset    - Reset completo do banco")
        print("  check    - Verificar status do banco")
        print("\nExemplo:")
        print("  python init_db.py init")
        return
    
    comando = sys.argv[1].lower()
    
    if comando == 'init':
        init_database()
    elif comando == 'reset':
        reset_database()
    elif comando == 'check':
        check_database()
    else:
        print(f"‚ùå Comando inv√°lido: {comando}")
        print("Comandos v√°lidos: init, reset, check")


if __name__ == "__main__":
    main()
