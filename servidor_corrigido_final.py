#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Servidor HTTP para o Dashboard Corrigido Final
"""

import http.server
import socketserver
import webbrowser
import os
from pathlib import Path


def iniciar_servidor_corrigido_final():
    """Iniciar servidor HTTP para dashboard corrigido final"""
    print("üöÄ INICIANDO SERVIDOR DASHBOARD CORRIGIDO FINAL...")
    print("-" * 50)

    # Verificar se arquivo existe
    dashboard_file = Path("dashboard_corrigido_final.html")
    if not dashboard_file.exists():
        print("‚ùå Arquivo dashboard_corrigido_final.html n√£o encontrado!")
        return

    # Configurar servidor
    PORT = 8003
    Handler = http.server.SimpleHTTPRequestHandler

    # Mudar para diret√≥rio correto
    os.chdir(Path(__file__).parent)

    try:
        with socketserver.TCPServer(("", PORT), Handler) as httpd:
            print(f"‚úÖ Servidor iniciado na porta {PORT}")
            print(
                f"üåê URL: http://localhost:{PORT}/dashboard_corrigido_final.html")
            print("")
            print("üéâ DASHBOARD CORRIGIDO FINAL - TODOS OS PROBLEMAS RESOLVIDOS:")
            print("  ‚úÖ 91 diretorias (n√£o mais 89)")
            print("  ‚úÖ 5,582 escolas com dados atualizados")
            print("  ‚úÖ Marcadores de escolas por tipo corretos")
            print("  ‚úÖ Diretorias vis√≠veis no mapa com ve√≠culos")
            print("  ‚úÖ Linhas de conex√£o escola-diretoria")
            print("  ‚úÖ Legenda corrigida e funcional")
            print("  ‚úÖ Lista de escolas mostra todos os tipos")
            print("  ‚úÖ Gr√°ficos funcionais")
            print("  ‚úÖ Estilo original preservado")
            print("  ‚úÖ M√≥dulos simplificados para manuten√ß√£o")
            print("")
            print("‚èπÔ∏è  Pressione Ctrl+C para parar o servidor")
            print("-" * 50)

            # Abrir navegador automaticamente
            webbrowser.open(
                f"http://localhost:{PORT}/dashboard_corrigido_final.html")

            # Manter servidor rodando
            httpd.serve_forever()

    except KeyboardInterrupt:
        print("\nüõë Servidor parado pelo usu√°rio")
    except Exception as e:
        print(f"‚ùå Erro ao iniciar servidor: {e}")


if __name__ == "__main__":
    iniciar_servidor_corrigido_final()
